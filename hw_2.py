import numpy as np
from math import factorial as f


def choose(n, k):
    return f(n) / (f(k) * f(n - k))


def bern(p, n, k):
    return choose(n, k) * p ** k * (1 - p) ** (n - k)


def puas(l, m):
    return l ** m / f(m) * np.exp(-l)


# 1. Вероятность того, что стрелок попадет в мишень, выстрелив один раз, равна 0.8.
# Стрелок выстрелил 100 раз. Найдите вероятность того, что стрелок попадет в цель ровно 85 раз

print(f'1. вероятность того, что стрелок попадет в цель ровно 85 раз:  {bern(0.8, 100, 85):0.4f}')


# 2. Вероятность того, что лампочка перегорит в течение первого дня эксплуатации, равна 0.0004.
# В жилом комплексе после ремонта в один день включили 5000 новых лампочек.
# Какова вероятность, что ни одна из них не перегорит в первый день? Какова вероятность, что перегорят ровно две?

lmbd = 5000*0.0004
print(f'2. вероятность, что ни одна из них не перегорит в первый день:  {puas(lmbd, 0):0.4f}')
print(f'вероятность, что перегорят ровно две:  {puas(lmbd, 2):0.4f}')


# 3. Монету подбросили 144 раза. Какова вероятность, что орел выпадет ровно 70 раз?

print(f'3. вероятность, что орел выпадет ровно 70 раз:  {bern(0.5, 144, 70):0.4f}')


# 4. В первом ящике находится 10 мячей, из которых 7 - белые. Во втором ящике - 11 мячей, из которых 9 белых.
# Из каждого ящика вытаскивают случайным образом по два мяча. Какова вероятность того, что все мячи белые?
# Какова вероятность того, что ровно два мяча белые? Какова вероятность того, что хотя бы один мяч белый?

print(f'4. вероятность того, что все мячи белые:  {(7*6*9*8)/(10*9*11*10):0.4f}')
print(f'вероятность того, что ровно два мяча белые:  {(7/10)*(6/9)*(2/11)*(1/10) + (7/10)*(3/9)*(9/11)*(2/10) + (7/10)*(3/9)*(2/11)*(9/10) + (3/10)*(7/9)*(9/11)*(2/10) + (3/10)*(7/9)*(2/11)*(9/10) + (3/10)*(2/9)*(9/11)*(8/10):0.4f}')
print(f'вероятность того, что хотя бы один мяч белый:  {1-(3/10*2/9*2/11*1/10):0.4f}')
